@using DataAccess.Models
@page "/fruits"
@inject IFruitsService FruitService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-center mb-4 text-success fw-bold" style="color: #3F6C45">Fruit List</h2>
        <button class="btn btn-success mb-3" @onclick="@(() => Navigation.NavigateTo("/fruits/create"))">
            Create Fruit
        </button>
    </div>

    <div class="table-responsive">
        <table class="table table-hover shadow-sm">
            <thead class="table-success">
                <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (filteredFruits.Count == 0)
                {
                    <tr>
                        <td colspan="5" class="text-center text-muted py-3">Not Found !!!</td>
                    </tr>
                }
                else
                {
                    @for (int i = 0; i < filteredFruits.Count; i++)
                    {
                        var fruit = filteredFruits[i];
                        <tr class="@(fruit.Quantity == 0 ? "table-danger" : "table-light")">
                            <td>@(i + 1)</td>
                            <td>@fruit.Name</td>
                            <td>@fruit.Price.ToString("N0") VNĐ</td>
                            <td>@(fruit.Quantity > 0 ? fruit.Quantity : "Out of Stock")</td>
                            <td>
                                <button class="btn btn-primary btn-sm me-2" @onclick="() => EditFruit(fruit.Id)">
                                    <i class="bi bi-pencil"></i> Edit
                                </button>
                                <button class="btn btn-secondary btn-sm me-2" @onclick="() => DetailFruit(fruit.Id)">
                                    <i class="bi bi-eye"></i> Detail
                                </button>
                                <button class="btn btn-danger btn-sm" @onclick="() => DeleteFruit(fruit.Id)">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Fruits> fruitList = new();
    private List<Fruits> filteredFruits = new();
    private string searchTerm = "";
    private decimal? searchPrice;

    private string SearchTerm
    {
        get => searchTerm;
        set
        {
            searchTerm = value;
            FilterFruits();
        }
    }

    private decimal? SearchPrice
    {
        get => searchPrice;
        set
        {
            searchPrice = value;
            FilterFruits();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        fruitList = (await FruitService.GetAllFruitsAsync()).ToList();
        filteredFruits = fruitList;
    }

    private void FilterFruits()
    {
        filteredFruits = fruitList
            .Where(f => (string.IsNullOrEmpty(searchTerm) || f.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)) &&
                        (!searchPrice.HasValue || f.Price <= searchPrice.Value))
            .ToList();
    }

    private void EditFruit(int id)
    {
        Navigation.NavigateTo($"/fruits/edit/{id}");
    }

    private async Task DeleteFruit(int id)
    {
        var confirm = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this fruit ???");
        if (confirm)
        {
            await FruitService.DeleteFruitAsync(id);

            fruitList = (await FruitService.GetAllFruitsAsync()).ToList();
            FilterFruits();
            StateHasChanged();
        }
    }

    private void DetailFruit(int id)
    {
        Navigation.NavigateTo($"/fruits/details/{id}");
    }
}
